buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
    }
}

plugins { 
    id "org.asciidoctor.convert" version "1.5.2"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'




jar {
    baseName = 'backend'
    version =  '0.1.0'
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

dependencies {
    //compile("org.springframework.boot:spring-boot-starter-amqp")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-test")
    compile('com.fasterxml.jackson.core:jackson-core:2.7.3')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
  	compile('org.springframework.boot:spring-boot-starter-security')
  	compile ('org.springframework.security:spring-security-test:4.0.1.RELEASE')
  	//compile("org.springframework.boot:spring-boot-starter-websocket")
    //compile("org.springframework:spring-messaging")
  	compile('org.hibernate:hibernate-validator')
    testCompile("junit:junit")
    runtime('com.h2database:h2')
    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc:1.0.1.RELEASE'
    
    compile("org.hibersap:hibersap-core:1.2.0")
    compile("org.hibersap:hibersap-jco:1.2.0")
    //compile("org.hibersap:sapjco3:1.2.0")
    compile group: 'org.hibersap', name: 'sapjco3', version: '3.0'
    
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into project.rootDir
    rename {
        'app.jar'
    }
}
stage.mustRunAfter(clean)

clean << {
    project.file('app.jar').delete()
}



ext { 
    snippetsDir = file('build/generated-snippets')
}

test { 
    outputs.dir snippetsDir
}

test {
  //exclude 'de.hhn.se.embedded.zigbee.backend/**'
}

asciidoctor { 
    attributes 'snippets': snippetsDir 
    inputs.dir snippetsDir 
    dependsOn test 
    
    backends = ['html5']
    attributes = [
            toc: 'left',
            toclevels: '2',
            numbered: ''
    ]
}
